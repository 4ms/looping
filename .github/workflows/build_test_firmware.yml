name: Build and test firmware

on:
  workflow_dispatch:
    inputs:
      linux_x64:
        description: 'Build on Linux x64'
        required: true
        default: true
        type: boolean
      win_x64:
        description: 'build on Windows x64'
        required: true
        default: false
        type: boolean
  push:
    branches:
      - main
      - fix-ci
    tags:
      - '*v[0-9]+.[0-9]+.[0-9]+*'
    paths:
      - '!README.md'
      - '!.*'

jobs:
  build-lin:
    if: ${{ inputs.linux_x64 || startsWith(github.ref, 'refs/tags/v') }}
    strategy:
        matrix:
          gcc: ['12.2.Rel1']  # can add other versions if needed
    name: "Build firmware"
    runs-on: ubuntu-latest
    steps:
      - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
        uses: carlosperate/arm-none-eabi-gcc-action@v1
        with:
          release: ${{ matrix.gcc }}

      - name: Install cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.26.x'

      - name: Install Ninja
        run: sudo apt-get install ninja-build 
          
      - name: Git setup
        run: git config --global --add safe.directory '*'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Build and test
        run: cmake -B build -G Ninja -DBRAINBOARD_MP15x=ON && cmake --build build

      - name: Set Release Version
        if: startsWith(github.ref, 'refs/tags/v')
        uses: FranzDiebold/github-env-vars-action@v2

      - name: Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          name: "Firmware Version: ${{ env.CI_REF_NAME }}"
          files: |
            build/f723/723-combo.bin
            build/f723/723.elf
            build/f723/723-bootloader.elf
            build/f746/746-combo.bin
            build/f746/746.elf
            build/f746/746-bootloader.elf
            
  build-win:
    if: ${{ inputs.win_x64 }}
    name: "Build firmware on windows"
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Install windows dependencies
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git make mingw-w64-x86_64-gcc mingw-w64-x86_64-cmake mingw-w64-x86_64-ninja
          path-type: inherit

      - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
        uses: carlosperate/arm-none-eabi-gcc-action@v1
        with:
          release: '12.2.Rel1'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ secrets.CHECKOUT_TOKEN }}

      - name: Build and test
        run: cmake -B build -G Ninja -DBRAINBOARD_MP15x=ON && cmake --build build

